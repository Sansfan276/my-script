local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\12\175","\225\34\129\168\82\154"),function(v42) if (v9(v42,2)==79) then v30=v8(v11(v42,1,2 -1 ));return "";else local v92=v10(v8(v42,16));if v30 then local v100=0;local v101;while true do if (0==v100) then v101=v13(v92,v30);v30=nil;v100=1;end if (v100==1) then return v101;end end else return v92;end end end);local function v31(v43,v44,v45) if v45 then local v93=0;local v94;while true do if (0==v93) then v94=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-(2 -1))) + 1)) ;return v94-(v94%1) ;end end else local v95=(3 -1)^(v44-1) ;return (((v43%(v95 + v95))>=v95) and 1) or 0 ;end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47=0;local v48;local v49;while true do if (v47==1) then return (v49 * 256) + v48 ;end if (v47==0) then v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v47=1;end end end local function v34() local v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v53 * (43216383 -26439167)) + (v52 * 65536) + (v51 * 256) + v50 ;end local function v35() local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v54==2) then v59=v31(v56,952 -(857 + 74) ,31);v60=((v31(v56,32)==1) and  -1) or 1 ;v54=3;end if (v54==1) then v57=1;v58=(v31(v56,1,20) * (2^(651 -(555 + 64)))) + v55 ;v54=2;end if (v54==3) then if (v59==0) then if (v58==0) then return v60 * 0 ;else local v121=0;while true do if (v121==0) then v59=1;v57=0;break;end end end elseif (v59==(2615 -(367 + 201))) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^52))) ;end if (v54==0) then v55=v34();v56=v34();v54=1;end end end local function v36(v61) local v62=0;local v63;local v64;while true do if (v62==0) then v63=nil;if  not v61 then local v116=0;while true do if (0==v116) then v61=v34();if (v61==0) then return "";end break;end end end v62=1;end if (v62==1) then v63=v11(v27,v29,(v29 + v61) -(928 -(214 + 713)) );v29=v29 + v61 ;v62=2;end if (v62==3) then return v14(v64);end if (v62==2) then v64={};for v102=1, #v63 do v64[v102]=v10(v9(v11(v63,v102,v102)));end v62=3;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65=0;local v66;local v67;local v68;local v69;local v70;local v71;while true do if (v65==1) then v70=v34();v71={};for v104=1,v70 do local v105=0;local v106;local v107;while true do if (v105==1) then if (v106==(1 + 0)) then v107=v32()~=0 ;elseif (v106==(879 -(282 + 595))) then v107=v35();elseif (v106==3) then v107=v36();end v71[v104]=v107;break;end if (v105==0) then v106=v32();v107=nil;v105=1;end end end v69[3]=v32();v65=2;end if (2==v65) then for v108=1,v34() do local v109=v32();if (v31(v109,1,1)==0) then local v117=0;local v118;local v119;local v120;while true do if (v117==0) then v118=v31(v109,2,3);v119=v31(v109,4,6);v117=1;end if (v117==3) then if (v31(v119,3,3)==1) then v120[4]=v71[v120[1274 -(226 + 1044) ]];end v66[v108]=v120;break;end if (v117==2) then if (v31(v119,1,1)==1) then v120[1067 -(68 + 997) ]=v71[v120[2]];end if (v31(v119,2,2)==1) then v120[3]=v71[v120[3]];end v117=3;end if (v117==1) then v120={v33(),v33(),nil,nil};if (v118==0) then local v130=0;while true do if (0==v130) then v120[3]=v33();v120[4]=v33();break;end end elseif (v118==1) then v120[3]=v34();elseif (v118==2) then v120[3]=v34() -(2^16) ;elseif (v118==3) then local v326=0;while true do if (v326==0) then v120[3 + 0 ]=v34() -(2^(22 -6)) ;v120[4]=v33();break;end end end v117=2;end end end end for v110=1,v34() do v67[v110-1 ]=v39();end return v69;end if (v65==0) then v66={};v67={};v68={};v69={v66,v67,nil,v68};v65=1;end end end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v78=v75;local v79=v76;local v80=v77;local v81=v38;local v82=1;local v83= -1;local v84={};local v85={...};local v86=v20("#",...) -1 ;local v87={};local v88={};for v96=0,v86 do if (v96>=v80) then v84[v96-v80 ]=v85[v96 + 1 ];else v88[v96]=v85[v96 + 1 ];end end local v89=(v86-v80) + 1 ;local v90;local v91;while true do v90=v78[v82];v91=v90[1];if (v91<=52) then if (v91<=25) then if (v91<=12) then if (v91<=5) then if (v91<=2) then if (v91<=0) then local v134=v90[2];v88[v134](v21(v88,v134 + 1 ,v90[3]));elseif (v91>(118 -(32 + 85))) then local v172=0;local v173;while true do if (0==v172) then v173=v90[2 + 0 ];v88[v173]=v88[v173]();break;end end else v88[v90[2]]=v88[v90[3]] + v90[4] ;end elseif (v91<=3) then local v135=0;local v136;local v137;local v138;local v139;while true do if (v135==0) then v136=v90[2];v137,v138=v81(v88[v136](v88[v136 + 1 + 0 ]));v135=1;end if (v135==1) then v83=(v138 + v136) -(958 -(892 + 65)) ;v139=0;v135=2;end if (v135==2) then for v359=v136,v83 do v139=v139 + (2 -1) ;v88[v359]=v137[v139];end break;end end elseif (v91>(6 -2)) then v88[v90[3 -1 ]]=v90[3];else local v177=v90[352 -(87 + 263) ];local v178=v88[v177];for v328=v177 + 1 ,v83 do v15(v178,v88[v328]);end end elseif (v91<=8) then if (v91<=(186 -(67 + 113))) then v73[v90[3]]=v88[v90[2]];elseif (v91==7) then local v179=v90[2];local v180=v88[v179];local v181=v88[v179 + 2 ];if (v181>0) then if (v180>v88[v179 + 1 + 0 ]) then v82=v90[3];else v88[v179 + 3 ]=v180;end elseif (v180<v88[v179 + 1 ]) then v82=v90[3];else v88[v179 + 3 ]=v180;end else v88[v90[2]]=v88[v90[3]] + v90[4] ;end elseif (v91<=10) then if (v91==9) then local v183=v90[2];v88[v183](v88[v183 + 1 ]);else local v184=v90[2];v88[v184]=v88[v184](v88[v184 + 1 ]);end elseif (v91>11) then local v186=0;local v187;local v188;local v189;local v190;while true do if (v186==2) then for v402=v187,v83 do local v403=0;while true do if (v403==0) then v190=v190 + 1 ;v88[v402]=v188[v190];break;end end end break;end if (v186==0) then v187=v90[2];v188,v189=v81(v88[v187](v21(v88,v187 + 1 ,v90[3])));v186=1;end if (v186==1) then v83=(v189 + v187) -1 ;v190=0;v186=2;end end else for v329=v90[2],v90[7 -4 ] do v88[v329]=nil;end end elseif (v91<=(14 + 4)) then if (v91<=(59 -44)) then if (v91<=13) then v82=v90[3];elseif (v91==(966 -(802 + 150))) then v88[v90[2]]=v88[v90[3]][v88[v90[4]]];else local v193=0;local v194;local v195;local v196;while true do if (v193==1) then v196={};v195=v18({},{[v7("\195\235\128\139\182\53\228","\80\156\180\233\229\210")]=function(v404,v405) local v406=v196[v405];return v406[1][v406[5 -3 ]];end,[v7("\119\113\51\0\28\65\64\57\0\19","\107\40\46\93\101")]=function(v407,v408,v409) local v410=0;local v411;while true do if (v410==0) then v411=v196[v408];v411[1 -0 ][v411[2]]=v409;break;end end end});v193=2;end if (2==v193) then for v412=1,v90[4] do local v413=0;local v414;while true do if (v413==1) then if (v414[1]==42) then v196[v412-1 ]={v88,v414[3]};else v196[v412-(1 + 0) ]={v73,v414[3]};end v87[ #v87 + 1 ]=v196;break;end if (v413==0) then v82=v82 + 1 ;v414=v78[v82];v413=1;end end end v88[v90[2]]=v40(v194,v195,v74);break;end if (v193==0) then v194=v79[v90[3]];v195=nil;v193=1;end end end elseif (v91<=16) then if (v90[999 -(915 + 82) ]==v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[3];end elseif (v91>17) then local v198=0;local v199;local v200;local v201;while true do if (2==v198) then if (v200>0) then if (v201<=v88[v199 + 1 ]) then local v450=0;while true do if (v450==0) then v82=v90[3];v88[v199 + 3 ]=v201;break;end end end elseif (v201>=v88[v199 + 1 ]) then local v451=0;while true do if (0==v451) then v82=v90[3];v88[v199 + 3 ]=v201;break;end end end break;end if (v198==0) then v199=v90[2];v200=v88[v199 + 2 ];v198=1;end if (1==v198) then v201=v88[v199] + v200 ;v88[v199]=v201;v198=2;end end else do return;end end elseif (v91<=(59 -38)) then if (v91<=19) then if (v88[v90[2 + 0 ]]==v90[4]) then v82=v82 + 1 ;else v82=v90[3];end elseif (v91==(26 -6)) then local v203=v90[1189 -(1069 + 118) ];local v204,v205=v81(v88[v203](v21(v88,v203 + (2 -1) ,v83)));v83=(v205 + v203) -1 ;local v206=0;for v331=v203,v83 do local v332=0;while true do if (v332==0) then v206=v206 + (1 -0) ;v88[v331]=v204[v206];break;end end end else v88[v90[2]]=v40(v79[v90[3]],nil,v74);end elseif (v91<=23) then if (v91>22) then v82=v90[3];else local v209=v90[2];local v210=v88[v209];for v333=v209 + 1 ,v83 do v15(v210,v88[v333]);end end elseif (v91==24) then local v211=v90[2];v88[v211]=v88[v211](v21(v88,v211 + 1 ,v90[3]));else local v213=0;local v214;local v215;local v216;while true do if (0==v213) then v214=v90[2];v215=v88[v214 + 1 + 1 ];v213=1;end if (v213==2) then if (v215>0) then if (v216<=v88[v214 + 1 ]) then v82=v90[3];v88[v214 + (4 -1) ]=v216;end elseif (v216>=v88[v214 + 1 ]) then local v454=0;while true do if (v454==0) then v82=v90[3];v88[v214 + 3 ]=v216;break;end end end break;end if (v213==1) then v216=v88[v214] + v215 ;v88[v214]=v216;v213=2;end end end elseif (v91<=38) then if (v91<=31) then if (v91<=(28 + 0)) then if (v91<=26) then local v143=0;local v144;local v145;while true do if (0==v143) then v144=v90[2];v145=v88[v90[3]];v143=1;end if (v143==1) then v88[v144 + 1 ]=v145;v88[v144]=v145[v90[4]];break;end end elseif (v91>27) then v88[v90[2]]=v88[v90[3]];else v88[v90[793 -(368 + 423) ]]=v88[v90[3]]%v88[v90[4]] ;end elseif (v91<=29) then local v146=0;local v147;while true do if (v146==0) then v147=v90[2];v88[v147](v21(v88,v147 + 1 ,v83));break;end end elseif (v91==30) then local v220=v90[3];local v221=v88[v220];for v340=v220 + (3 -2) ,v90[4] do v221=v221   .. v88[v340] ;end v88[v90[2]]=v221;elseif  not v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end elseif (v91<=(52 -(10 + 8))) then if (v91<=32) then v88[v90[2]][v90[3]]=v88[v90[4]];elseif (v91==33) then do return v88[v90[2]];end else local v223=v90[2];local v224,v225=v81(v88[v223](v21(v88,v223 + 1 ,v83)));v83=(v225 + v223) -1 ;local v226=0;for v341=v223,v83 do v226=v226 + 1 ;v88[v341]=v224[v226];end end elseif (v91<=(138 -102)) then if (v91>35) then v88[v90[2]]={};elseif v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end elseif (v91>37) then v88[v90[2]]=v88[v90[3]]%v88[v90[446 -(416 + 26) ]] ;else local v229=v90[2];v88[v229]=v88[v229](v21(v88,v229 + (3 -2) ,v83));end elseif (v91<=45) then if (v91<=41) then if (v91<=39) then v88[v90[2]]=v88[v90[3]][v90[2 + 2 ]];elseif (v91==40) then v88[v90[2]]=v88[v90[3]] * v88[v90[4]] ;else local v232=0;local v233;local v234;local v235;local v236;while true do if (v232==1) then v83=(v235 + v233) -1 ;v236=0;v232=2;end if (0==v232) then v233=v90[3 -1 ];v234,v235=v81(v88[v233](v21(v88,v233 + 1 ,v90[3])));v232=1;end if (v232==2) then for v417=v233,v83 do local v418=0;while true do if (v418==0) then v236=v236 + 1 ;v88[v417]=v234[v236];break;end end end break;end end end elseif (v91<=43) then if (v91==42) then v88[v90[2]]=v88[v90[3]];else for v344=v90[2],v90[3] do v88[v344]=nil;end end elseif (v91>44) then local v239=0;local v240;local v241;local v242;while true do if (v239==1) then v242=0;for v419=v240,v90[442 -(145 + 293) ] do local v420=0;while true do if (v420==0) then v242=v242 + 1 ;v88[v419]=v241[v242];break;end end end break;end if (0==v239) then v240=v90[2];v241={v88[v240](v21(v88,v240 + 1 ,v83))};v239=1;end end else local v243=v90[2];v88[v243]=v88[v243](v21(v88,v243 + (431 -(44 + 386)) ,v90[3]));end elseif (v91<=48) then if (v91<=(1532 -(998 + 488))) then local v152=0;local v153;while true do if (0==v152) then v153=v90[1 + 1 ];v88[v153]=v88[v153]();break;end end elseif (v91==47) then v88[v90[2]][v88[v90[3]]]=v88[v90[4]];else v88[v90[2]]=v40(v79[v90[3]],nil,v74);end elseif (v91<=50) then if (v91>(41 + 8)) then local v248=0;local v249;while true do if (v248==0) then v249=v90[2];do return v21(v88,v249,v83);end break;end end else local v250=v90[2];local v251,v252=v81(v88[v250](v88[v250 + 1 ]));v83=(v252 + v250) -1 ;local v253=0;for v348=v250,v83 do local v349=0;while true do if (v349==0) then v253=v253 + 1 ;v88[v348]=v251[v253];break;end end end end elseif (v91==51) then v88[v90[2]][v88[v90[3]]]=v90[4];else v88[v90[2]][v88[v90[3]]]=v90[4];end elseif (v91<=(851 -(201 + 571))) then if (v91<=(1203 -(116 + 1022))) then if (v91<=58) then if (v91<=55) then if (v91<=(220 -167)) then v88[v90[2]]=v74[v90[2 + 1 ]];elseif (v91==54) then local v258=v90[3];local v259=v88[v258];for v350=v258 + 1 ,v90[4] do v259=v259   .. v88[v350] ;end v88[v90[2]]=v259;else do return v88[v90[7 -5 ]];end end elseif (v91<=56) then v88[v90[2]]= #v88[v90[10 -7 ]];elseif (v91==57) then local v261=0;local v262;while true do if (v261==0) then v262=v90[2];do return v88[v262](v21(v88,v262 + 1 ,v90[862 -(814 + 45) ]));end break;end end else local v263=v90[2];v88[v263](v21(v88,v263 + 1 ,v83));end elseif (v91<=61) then if (v91<=59) then v88[v90[2]][v90[3]]=v88[v90[4]];elseif (v91>60) then v88[v90[2]]=v73[v90[3]];elseif  not v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end elseif (v91<=63) then if (v91>(152 -90)) then v88[v90[1 + 1 ]]=v88[v90[3]] -v90[4] ;else v88[v90[2]]=v88[v90[3]][v88[v90[4]]];end elseif (v91>64) then local v269=v88[v90[4]];if  not v269 then v82=v82 + 1 + 0 ;else local v365=0;while true do if (v365==0) then v88[v90[2]]=v269;v82=v90[3];break;end end end else v88[v90[2]]= #v88[v90[3]];end elseif (v91<=72) then if (v91<=(953 -(261 + 624))) then if (v91<=66) then if v88[v90[3 -1 ]] then v82=v82 + 1 ;else v82=v90[3];end elseif (v91==67) then v88[v90[2]]();else local v272=v90[2];local v273=v90[4];local v274=v272 + 2 ;local v275={v88[v272](v88[v272 + 1 ],v88[v274])};for v351=1,v273 do v88[v274 + v351 ]=v275[v351];end local v276=v275[1];if v276 then local v366=0;while true do if (v366==0) then v88[v274]=v276;v82=v90[3];break;end end else v82=v82 + 1 ;end end elseif (v91<=70) then if (v91>69) then local v277=v88[v90[4]];if  not v277 then v82=v82 + 1 ;else local v367=0;while true do if (v367==0) then v88[v90[2]]=v277;v82=v90[3];break;end end end else v88[v90[2]][v88[v90[3]]]=v88[v90[4]];end elseif (v91==71) then v88[v90[2]][v90[3]]=v90[4];else v88[v90[2]]();end elseif (v91<=75) then if (v91<=73) then v88[v90[2]]=v88[v90[3]] + v88[v90[4]] ;elseif (v91>74) then v88[v90[2]]=v88[v90[3]]%v90[4] ;else v88[v90[2]]={};end elseif (v91<=77) then if (v91==76) then v88[v90[1082 -(1020 + 60) ]]=v90[3];else local v286=0;local v287;while true do if (v286==0) then v287=v90[2];v88[v287](v21(v88,v287 + 1 ,v90[1426 -(630 + 793) ]));break;end end end elseif (v91==78) then local v288=0;local v289;local v290;local v291;while true do if (v288==0) then v289=v90[2];v290=v88[v289];v288=1;end if (v288==1) then v291=v88[v289 + 2 ];if (v291>0) then if (v290>v88[v289 + 1 ]) then v82=v90[3];else v88[v289 + 3 ]=v290;end elseif (v290<v88[v289 + 1 ]) then v82=v90[3];else v88[v289 + 3 ]=v290;end break;end end else do return v88[v90[2]]();end end elseif (v91<=92) then if (v91<=85) then if (v91<=(277 -195)) then if (v91<=80) then v88[v90[9 -7 ]]=v88[v90[3]]%v90[4] ;elseif (v91==81) then local v292=v90[2];do return v88[v292](v21(v88,v292 + 1 ,v90[3]));end elseif (v90[1 + 1 ]==v88[v90[13 -9 ]]) then v82=v82 + 1 ;else v82=v90[3];end elseif (v91<=(1830 -(760 + 987))) then v88[v90[2]]=v90[1916 -(1789 + 124) ] + v88[v90[4]] ;elseif (v91>84) then v88[v90[2]]=v90[3] + v88[v90[4]] ;else v73[v90[769 -(745 + 21) ]]=v88[v90[2]];end elseif (v91<=88) then if (v91<=(30 + 56)) then v88[v90[5 -3 ]]=v74[v90[3]];elseif (v91==87) then if (v88[v90[2]]==v90[4]) then v82=v82 + 1 ;else v82=v90[3];end else local v296=v90[7 -5 ];v88[v296](v88[v296 + 1 ]);end elseif (v91<=90) then if (v91>89) then v88[v90[2]]=v88[v90[3]] * v90[4] ;else local v298=0;local v299;while true do if (v298==0) then v299=v90[2];v88[v299]=v88[v299](v21(v88,v299 + 1 ,v83));break;end end end elseif (v91>(1 + 90)) then local v300=v90[2];local v301=v90[4];local v302=v300 + 2 ;local v303={v88[v300](v88[v300 + 1 ],v88[v302])};for v354=1,v301 do v88[v302 + v354 ]=v303[v354];end local v304=v303[1];if v304 then local v370=0;while true do if (v370==0) then v88[v302]=v304;v82=v90[3];break;end end else v82=v82 + 1 ;end else v88[v90[2 + 0 ]][v90[3]]=v90[4];end elseif (v91<=99) then if (v91<=95) then if (v91<=93) then local v164=0;local v165;while true do if (v164==0) then v165=v90[2];v88[v165]=v88[v165](v88[v165 + 1 ]);break;end end elseif (v91>94) then local v307=0;local v308;local v309;local v310;while true do if (v307==1) then v310={};v309=v18({},{[v7("\13\233\137\32\236\8\90","\34\82\182\224\78\136\109")]=function(v423,v424) local v425=v310[v424];return v425[1][v425[2]];end,[v7("\228\221\140\251\204\235\140\250\222\250","\158\187\130\226")]=function(v426,v427,v428) local v429=v310[v427];v429[1][v429[2]]=v428;end});v307=2;end if (0==v307) then v308=v79[v90[3]];v309=nil;v307=1;end if (v307==2) then for v431=1,v90[4] do local v432=0;local v433;while true do if (v432==1) then if (v433[1]==42) then v310[v431-1 ]={v88,v433[3]};else v310[v431-1 ]={v73,v433[3]};end v87[ #v87 + 1 ]=v310;break;end if (v432==0) then v82=v82 + 1 ;v433=v78[v82];v432=1;end end end v88[v90[2]]=v40(v308,v309,v74);break;end end else v88[v90[2]]=v88[v90[3]][v90[4]];end elseif (v91<=97) then if (v91==96) then local v313=v90[2];do return v21(v88,v313,v83);end else v88[v90[2]]=v88[v90[3]] + v88[v90[4]] ;end elseif (v91==(1153 -(87 + 968))) then v88[v90[2]]=v88[v90[3]] * v88[v90[4]] ;else local v316=0;local v317;local v318;local v319;while true do if (1==v316) then v319=0;for v434=v317,v90[4] do local v435=0;while true do if (v435==0) then v319=v319 + 1 ;v88[v434]=v318[v319];break;end end end break;end if (v316==0) then v317=v90[8 -6 ];v318={v88[v317](v21(v88,v317 + 1 + 0 ,v83))};v316=1;end end end elseif (v91<=102) then if (v91<=100) then local v166=v90[2];local v167=v88[v90[3]];v88[v166 + 1 ]=v167;v88[v166]=v167[v90[4]];elseif (v91==101) then local v320=0;local v321;while true do if (0==v320) then v321=v90[2];do return v21(v88,v321,v321 + v90[3] );end break;end end else v88[v90[2]]=v88[v90[3]] * v90[8 -4 ] ;end elseif (v91<=104) then if (v91>(1516 -(447 + 966))) then v88[v90[2]]=v73[v90[3]];else v88[v90[5 -3 ]]=v88[v90[3]] -v90[4] ;end elseif (v91>105) then do return v88[v90[1819 -(1703 + 114) ]]();end else do return;end end v82=v82 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--
